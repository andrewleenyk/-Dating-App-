{"ast":null,"code":"var _jsxFileName = \"/Users/drew/general_assembly/pawpaw/unit_4/week_12/WEB3-Blog/client/src/containers/MainContainer/MainContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory, useParams } from 'react-router-dom';\nimport { getAllPosts, postPost, putPost, deletePost } from '../../services/posts';\nimport Posts from '../../screens/Posts';\nimport PostDetail from '../../screens/PostDetail';\nimport PostCreate from '../../screens/PostCreate';\nimport PostEdit from '../../screens/PostEdit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MainContainer(_ref) {\n  _s();\n\n  let {\n    currentUser\n  } = _ref;\n  const [allPosts, setAllPosts] = useState([]);\n  const [post, setPost] = useState(null);\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  const fetchPosts = async () => {\n    const posts = await getAllPosts();\n    setAllPosts(posts);\n  };\n\n  const createPost = async postData => {\n    const newPost = await postPost(postData);\n    setAllPosts(prevState => [...prevState, newPost]);\n    history.push('/posts');\n  };\n\n  const updatePost = async (id, postData) => {\n    const updatedPost = await putPost(id, postData);\n    setAllPosts(prevState => prevState.map(post => {\n      return post.id === Number(id) ? updatedPost : post;\n    }));\n    history.push('/posts');\n  };\n\n  const removePost = async id => {\n    await deletePost(id);\n    setAllPosts(prevState => prevState.filter(post => post.id !== id));\n    history.push('/posts');\n  };\n\n  useEffect(() => {\n    if (allPosts.length) {\n      const onePost = allPosts.find(post => post.id === Number(id));\n      setPost(onePost);\n    }\n  }, [allPosts, id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts/new\",\n        children: /*#__PURE__*/_jsxDEV(PostCreate, {\n          createPost: createPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts/:id/edit\",\n        children: /*#__PURE__*/_jsxDEV(PostEdit, {\n          updatePost: updatePost,\n          allPosts: allPosts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts/:id\",\n        children: /*#__PURE__*/_jsxDEV(PostDetail, {\n          allPosts: allPosts,\n          currentUser: currentUser,\n          removePost: removePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts\",\n        children: /*#__PURE__*/_jsxDEV(Posts, {\n          allPosts: allPosts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(MainContainer, \"GbSpLCGft7tpQODVBrvW6qnJ7Fg=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = MainContainer;\nexport default MainContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContainer\");","map":{"version":3,"sources":["/Users/drew/general_assembly/pawpaw/unit_4/week_12/WEB3-Blog/client/src/containers/MainContainer/MainContainer.jsx"],"names":["React","useState","useEffect","Route","Switch","useHistory","useParams","getAllPosts","postPost","putPost","deletePost","Posts","PostDetail","PostCreate","PostEdit","MainContainer","currentUser","allPosts","setAllPosts","post","setPost","history","id","fetchPosts","posts","createPost","postData","newPost","prevState","push","updatePost","updatedPost","map","Number","removePost","filter","length","onePost","find"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory, useParams } from 'react-router-dom';\nimport { getAllPosts, postPost, putPost, deletePost} from '../../services/posts';\nimport Posts from '../../screens/Posts'\nimport PostDetail from '../../screens/PostDetail';\nimport PostCreate from '../../screens/PostCreate';\nimport PostEdit from '../../screens/PostEdit';\n\n\n\nfunction MainContainer({ currentUser }) {\n    const [allPosts, setAllPosts] = useState([]);\n    const [post, setPost] = useState(null);\n    const history = useHistory();\n    const { id } = useParams();\n\n    useEffect(() => {\n    fetchPosts();\n    }, [])\n\n    const fetchPosts = async () => {\n    const posts = await getAllPosts();\n    setAllPosts(posts);\n    } \n\n    const createPost = async (postData) => {\n    const newPost = await postPost(postData);\n    setAllPosts(prevState => ([\n        ...prevState,\n        newPost\n    ]));\n    history.push('/posts');\n    }\n\n    const updatePost = async (id, postData) => {\n    const updatedPost = await putPost(id, postData);\n    setAllPosts(prevState => prevState.map(post => {\n        return post.id === Number(id) ? updatedPost : post\n        })\n    )\n    history.push('/posts');\n    }\n\n\n    const removePost = async (id) => {\n    await deletePost(id);\n    setAllPosts(prevState => prevState.filter(post => post.id !== id));\n    history.push('/posts');\n    }\n\n    useEffect(() => {\n        if (allPosts.length) {\n          const onePost = allPosts.find((post) => post.id === Number(id));\n          setPost(onePost)\n        }\n      }, [allPosts, id])\n\n\n\n    return (\n    <>\n        <Switch>\n        <Route path='/posts/new'>\n        <PostCreate\n            createPost={createPost}\n        />\n        </Route>\n        <Route path='/posts/:id/edit'>\n        <PostEdit\n            updatePost={updatePost}\n            allPosts={allPosts}\n        />\n        </Route>\n        <Route path='/posts/:id'>\n        <PostDetail\n            allPosts={allPosts}\n            currentUser={currentUser}\n            removePost={removePost}\n        />\n        </Route>\n        <Route path='/posts'>\n            <Posts\n            allPosts={allPosts}\n            />\n        </Route>\n        <Route path='/'>\n          <h1>Home</h1>\n        </Route>\n        </Switch>\n    </>\n    )\n}\n\nexport default MainContainer;"]},"metadata":{},"sourceType":"module"}