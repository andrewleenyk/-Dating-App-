{"ast":null,"code":"var _jsxFileName = \"/Users/drew/general_assembly/pawpaw/unit_4/week_12/WEB3-Blog/client/src/containers/PostsContainer/PostsContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport { getAllPosts } from '../../services/posts';\nimport Posts from '../../screens/Posts/Posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PostsContainer() {\n  _s();\n\n  console.log('hj');\n  const [allPosts, setAllPosts] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  const fetchPosts = async () => {\n    const posts = await getAllPosts();\n    setAllPosts(posts);\n  };\n  /*\n  const createPost = async (postData) => {\n  const newPost = await postPost(postData);\n  setAllPosts(prevState => ([\n      ...prevState,\n      newPost\n  ]));\n  history.push('/posts');\n  }\n  const updatePost = async (id, postData) => {\n  const updatedPost = await putPost(id, postData);\n  setAllPosts(prevState => prevState.map(post => {\n      return post.id === Number(id) ? updatedPost : post\n      })\n  )\n  history.push('/posts');\n  }\n   const removePost = async (id) => {\n  await deletePost(id);\n  setAllPosts(prevState => prevState.filter(post => post.id !== id));\n  history.push('/posts');\n  }\n  */\n\n\n  console.log('hello');\n  console.log(allPosts);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts\",\n        children: /*#__PURE__*/_jsxDEV(Posts, {\n          allPosts: allPosts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PostsContainer, \"7nuxlWAdXESVv9CtOP4yDOPQ94U=\", false, function () {\n  return [useHistory];\n});\n\n_c = PostsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsContainer\");","map":{"version":3,"sources":["/Users/drew/general_assembly/pawpaw/unit_4/week_12/WEB3-Blog/client/src/containers/PostsContainer/PostsContainer.jsx"],"names":["React","useState","useEffect","Route","Switch","useHistory","getAllPosts","Posts","PostsContainer","console","log","allPosts","setAllPosts","history","fetchPosts","posts"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,QAA0C,kBAA1C;AACA,SAASC,WAAT,QAA2B,sBAA3B;AACA,OAAOC,KAAP,MAAkB,2BAAlB;;;AAGA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMY,OAAO,GAAGR,UAAU,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AAChBY,IAAAA,UAAU;AACT,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,UAAU,GAAG,YAAY;AAC/B,UAAMC,KAAK,GAAG,MAAMT,WAAW,EAA/B;AACAM,IAAAA,WAAW,CAACG,KAAD,CAAX;AACC,GAHD;AAIA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEGN,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AAEC,sBACA;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEI,QAAC,MAAD;AAAA,6BACA,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA,+BACI,QAAC,KAAD;AACA,UAAA,QAAQ,EAAEA;AADV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADA;AAYH;;GApDuBH,c;UAGJH,U;;;KAHIG,c","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport { getAllPosts} from '../../services/posts';\nimport Posts from '../../screens/Posts/Posts'\n\n\nexport default function PostsContainer() {\n    console.log('hj')\n    const [allPosts, setAllPosts] = useState([]);\n    const history = useHistory();\n\n    useEffect(() => {\n    fetchPosts();\n    }, [])\n\n    const fetchPosts = async () => {\n    const posts = await getAllPosts();\n    setAllPosts(posts);\n    } \n    /*\n    const createPost = async (postData) => {\n    const newPost = await postPost(postData);\n    setAllPosts(prevState => ([\n        ...prevState,\n        newPost\n    ]));\n    history.push('/posts');\n    }\n    const updatePost = async (id, postData) => {\n    const updatedPost = await putPost(id, postData);\n    setAllPosts(prevState => prevState.map(post => {\n        return post.id === Number(id) ? updatedPost : post\n        })\n    )\n    history.push('/posts');\n    }\n\n    const removePost = async (id) => {\n    await deletePost(id);\n    setAllPosts(prevState => prevState.filter(post => post.id !== id));\n    history.push('/posts');\n    }\n    */\n   console.log('hello')\n   console.log(allPosts)\n\n    return (\n    <>\n    <h2>hello</h2>\n        <Switch>\n        <Route path='/posts'>\n            <Posts\n            allPosts={allPosts}\n            />\n        </Route>\n        </Switch>\n    </>\n    )\n}"]},"metadata":{},"sourceType":"module"}