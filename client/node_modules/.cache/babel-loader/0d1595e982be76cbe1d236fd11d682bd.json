{"ast":null,"code":"var _jsxFileName = \"/Users/drew/general_assembly/pawpaw/unit_4/week_12/WEB3-Blog/client/src/components/Sphere/Sphere.js\";\nimport './Sphere.css';\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sphere() {\n  // UTILS\n  // -------------------------------------------\n  const getRandomPointOnUnitSphere = () => {\n    const theta = Math.random() * Math.PI * 2;\n    const z = Math.random() * 2 - 1;\n    const r = Math.sqrt(1 - z * z);\n    const x = Math.cos(theta) * r;\n    const y = Math.sin(theta) * r;\n    return new THREE.Vector3(x, y, z);\n  }; // BOID\n  // -------------------------------------------\n\n\n  class Boid {\n    constructor(radius, color, pos, vel) {\n      this.radius = radius;\n      this.pos = pos || new THREE.Vector3();\n      this.vel = vel || new THREE.Vector3();\n      this.acc = new THREE.Vector3();\n      this.qtn = new THREE.Quaternion();\n      this.color = color;\n      this.maxSpeed = 1.0;\n      this.maxSteer = 0.1;\n      this.wanderAngle = 0;\n      this.arriveRadius = 0.2 * this.maxSpeed;\n      this.departRadius = 0.5 * this.maxSpeed; // reusable objects\n\n      this._vA = new THREE.Vector3();\n      this._vB = getRandomPointOnUnitSphere();\n      this._mat = new THREE.Matrix4();\n      this._qtn = new THREE.Quaternion();\n      this.initMesh();\n    }\n\n    initMesh() {\n      const geometry = new THREE.ConeBufferGeometry(3, 6, 4);\n      geometry.scale(1, 1, 0.5);\n      const material = new THREE.MeshBasicMaterial({\n        color: this.color\n      });\n      const mesh = new THREE.Mesh(geometry, material);\n      this.object3D = mesh;\n    }\n\n    update() {\n      const oldPos = this.pos.clone(); // limit acceleration\n\n      if (this.acc.lengthSq() > this.maxSteer * this.maxSteer) this.acc.setLength(this.maxSteer); // update velocity\n\n      this.vel.add(this.acc); // limit velocity\n\n      if (this.vel.lengthSq() > this.maxSpeed * this.maxSpeed) this.vel.setLength(this.maxSpeed); // set velocity tangent to sphere\n\n      const vLength = this.vel.length();\n      const newPos = this.pos.clone().add(this.vel).setLength(this.radius);\n      this.vel.copy(newPos.sub(this.pos).setLength(vLength)); // update position\n\n      this.pos.add(this.vel); // update rotation\n\n      const t = this.vel.length() / this.maxSpeed;\n      this.up = this.pos.clone().normalize();\n\n      this._mat.identity().lookAt(this.pos, oldPos.negate(), this.up);\n\n      this._qtn.setFromRotationMatrix(this._mat);\n\n      this.qtn.slerp(this._qtn, t); // clear acceleration\n\n      this.acc.set(0, 0, 0); // update object3D\n\n      this.object3D.position.copy(this.pos);\n      this.object3D.up.copy(this.up);\n      this.object3D.quaternion.copy(this.qtn);\n    }\n\n    seek(target) {\n      let {\n        intensity = 1\n      } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      const steering = this._vA.subVectors(target, this.pos);\n\n      this.acc.add(steering.multiplyScalar(intensity));\n    }\n\n    flee(target) {\n      let {\n        intensity = 1\n      } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      const steering = this._vA.subVectors(this.pos, target);\n\n      this.acc.add(steering.multiplyScalar(intensity));\n    }\n\n    arrive(target) {\n      let {\n        intensity = 1\n      } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      const direction = this._vA.subVectors(target, this.pos);\n\n      const distance = this.pos.angleTo(target);\n      const targetSpeed = distance > this.arriveRadius ? this.maxSpeed : this.maxSpeed * distance / this.arriveRadius;\n      const targetVelocity = direction.setLength(targetSpeed);\n\n      const steering = this._vA.subVectors(targetVelocity, this.vel);\n\n      this.acc.add(steering.multiplyScalar(intensity));\n    }\n\n    wander() {\n      let {\n        angle = 0.25,\n        radius = 20,\n        intensity = 1\n      } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.wanderAngle += Math.random() * angle * 2 - angle;\n\n      const up = this._vA.copy(this.pos).normalize();\n\n      const rnd = new THREE.Vector3(Math.cos(this.wanderAngle), Math.sin(this.wanderAngle), 0);\n      rnd.multiplyScalar(radius);\n      rnd.applyAxisAngle(up, Math.PI / 2);\n      const target = this.pos.clone().add(this.vel).add(rnd);\n      return this.seek(target, {\n        intensity\n      });\n    }\n\n  } // MAIN\n  // -------------------------------------------\n\n\n  const behaviors = ['wander', 'seek', 'flee', 'arrive', 'seek-sequence'];\n  let curr = 0;\n  const scene = new THREE.Scene();\n  const camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.01, 1000);\n  camera.position.z = 300;\n  const renderer = new THREE.WebGLRenderer({\n    alpha: true\n  });\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  document.body.appendChild(renderer.domElement);\n  const radius = 80;\n  const geometry = new THREE.SphereGeometry(radius * 0.95, 32, 32);\n  const material = new THREE.MeshStandardMaterial({\n    color: 0xC8C8C8,\n    emissive: 0x072534,\n    roughness: 1,\n    transparent: true,\n    opacity: 0.9\n  });\n  const sphere = new THREE.Mesh(geometry, material);\n  scene.add(sphere);\n  const light = new THREE.PointLight(0xFFFFFF);\n  light.position.set(10, 100, -100);\n  camera.add(light);\n  scene.add(camera);\n  const controls = new THREE.TrackballControls(camera, renderer.domElement);\n  const count = 100;\n  boids = [];\n\n  for (let i = 0; i < count; i++) {\n    const color = !i ? 0xe5004f : 0xC8C8C8;\n    const pos = getRandomPointOnUnitSphere().setLength(radius);\n    const vel = null;\n    const b = new Boid(radius, color, pos, vel);\n    boids.push(b);\n    scene.add(b.object3D);\n  }\n\n  boids[0].maxSpeed *= 1.2;\n\n  function animate() {\n    requestAnimationFrame(animate);\n    update();\n    draw();\n  }\n\n  ;\n\n  function update() {\n    if (controls) controls.update();\n    const b0 = this.boids[0];\n    b0.wander();\n    b0.update();\n\n    for (let i = 1; i < boids.length; i++) {\n      const b = boids[i];\n\n      switch (behaviors[curr]) {\n        default:\n        case 'wander':\n          {\n            b.wander();\n            break;\n          }\n\n        case 'seek':\n          {\n            b.seek(b0.pos);\n            b.wander({\n              intensity: 0.8\n            });\n            break;\n          }\n\n        case 'flee':\n          {\n            b.flee(b0.pos);\n            b.wander({\n              intensity: 0.8\n            });\n            break;\n          }\n\n        case 'arrive':\n          {\n            b.arrive(b0.pos);\n            b.wander({\n              angle: 0.1,\n              intensity: 0.05\n            });\n            break;\n          }\n\n        case 'seek-sequence':\n          {\n            b.seek(this.boids[i - 1].pos);\n            break;\n          }\n      }\n\n      b.update();\n    }\n  }\n\n  function draw() {\n    renderer.render(scene, camera);\n  }\n\n  ;\n  animate(); // UI\n  // -------------------------------------------\n\n  /*\n  const btn = document.querySelector('button');\n  const lbl = document.querySelector('label');\n  \n  btn.addEventListener('click', () => {\n    if (curr < behaviors.length - 1) curr++;\n    else curr = 0;\n    \n    lbl.innerText = behaviors[curr];\n  });\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"ui\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"wander\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"change behaviour\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n}\n_c = Sphere;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sphere\");","map":{"version":3,"sources":["/Users/drew/general_assembly/pawpaw/unit_4/week_12/WEB3-Blog/client/src/components/Sphere/Sphere.js"],"names":["ReactDOM","THREE","Sphere","getRandomPointOnUnitSphere","theta","Math","random","PI","z","r","sqrt","x","cos","y","sin","Vector3","Boid","constructor","radius","color","pos","vel","acc","qtn","Quaternion","maxSpeed","maxSteer","wanderAngle","arriveRadius","departRadius","_vA","_vB","_mat","Matrix4","_qtn","initMesh","geometry","ConeBufferGeometry","scale","material","MeshBasicMaterial","mesh","Mesh","object3D","update","oldPos","clone","lengthSq","setLength","add","vLength","length","newPos","copy","sub","t","up","normalize","identity","lookAt","negate","setFromRotationMatrix","slerp","set","position","quaternion","seek","target","intensity","steering","subVectors","multiplyScalar","flee","arrive","direction","distance","angleTo","targetSpeed","targetVelocity","wander","angle","rnd","applyAxisAngle","behaviors","curr","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","alpha","setSize","document","body","appendChild","domElement","SphereGeometry","MeshStandardMaterial","emissive","roughness","transparent","opacity","sphere","light","PointLight","controls","TrackballControls","count","boids","i","b","push","animate","requestAnimationFrame","draw","b0","render"],"mappings":"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","sourcesContent":["import './Sphere.css';\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nexport default function Sphere() {\n\n\n// UTILS\n// -------------------------------------------\n\nconst getRandomPointOnUnitSphere = () => {\n\tconst theta = Math.random() * Math.PI * 2;\n\tconst z = Math.random() * 2 - 1;\n\tconst r = Math.sqrt(1 - z * z);\n\tconst x = Math.cos(theta) * r;\n\tconst y = Math.sin(theta) * r;\n\n\treturn new THREE.Vector3(x, y, z);\n}\n\n// BOID\n// -------------------------------------------\n\nclass Boid {\n  constructor(radius, color, pos, vel) {\n    this.radius = radius;\n\n\t\tthis.pos = pos || new THREE.Vector3();\n\t\tthis.vel = vel || new THREE.Vector3();\n\t\tthis.acc = new THREE.Vector3();\n\t\tthis.qtn = new THREE.Quaternion();\n    \n    this.color = color;\n    \n    this.maxSpeed = 1.0;\n\t\tthis.maxSteer = 0.1;\n    \n    this.wanderAngle = 0;\n\t\tthis.arriveRadius = 0.2 * this.maxSpeed;\n\t\tthis.departRadius = 0.5 * this.maxSpeed;\n    \n    // reusable objects\n\t\tthis._vA = new THREE.Vector3();\n\t\tthis._vB = getRandomPointOnUnitSphere();\n\t\tthis._mat = new THREE.Matrix4();\n\t\tthis._qtn = new THREE.Quaternion();\n    \n    this.initMesh();\n  }\n  \n  initMesh() {\n    const geometry = new THREE.ConeBufferGeometry(3, 6, 4);\n    geometry.scale(1, 1, 0.5);\n    const material = new THREE.MeshBasicMaterial({ color: this.color  });\n    const mesh = new THREE.Mesh(geometry, material);\n    this.object3D = mesh;\n  }\n  \n  update() {\n\t\tconst oldPos = this.pos.clone();\n\n\t\t// limit acceleration\n\t\tif (this.acc.lengthSq() > this.maxSteer * this.maxSteer) this.acc.setLength(this.maxSteer);\n\t\t// update velocity\n\t\tthis.vel.add(this.acc);\n\t\t// limit velocity\n\t\tif (this.vel.lengthSq() > this.maxSpeed * this.maxSpeed) this.vel.setLength(this.maxSpeed);\n\n\t\t// set velocity tangent to sphere\n\t\tconst vLength = this.vel.length();\n\t\tconst newPos = this.pos.clone().add(this.vel).setLength(this.radius);\n\t\tthis.vel.copy(newPos.sub(this.pos).setLength(vLength));\n\n\t\t// update position\n\t\tthis.pos.add(this.vel);\n\n\t\t// update rotation\n\t\tconst t = this.vel.length() / this.maxSpeed;\n\t\tthis.up = this.pos.clone().normalize();\n\t\tthis._mat.identity().lookAt(this.pos, oldPos.negate(), this.up);\n\t\tthis._qtn.setFromRotationMatrix(this._mat);\n\t\tthis.qtn.slerp(this._qtn, t);\n\t\t\n\t\t// clear acceleration\n\t\tthis.acc.set(0, 0, 0);\n    \n    // update object3D\n    this.object3D.position.copy(this.pos);\n\t\tthis.object3D.up.copy(this.up);\n\t\tthis.object3D.quaternion.copy(this.qtn);\n\t}\n  \n  seek(target, { intensity = 1 } = {}) {\n\t\tconst steering = this._vA.subVectors(target, this.pos);\n\t\tthis.acc.add(steering.multiplyScalar(intensity));\n\t}\n\n\tflee(target, { intensity = 1 } = {}) {\n\t\tconst steering = this._vA.subVectors(this.pos, target);\n\t\tthis.acc.add(steering.multiplyScalar(intensity));\n\t}\n  \n  arrive(target, { intensity = 1 } = {}) {\n\t\tconst direction = this._vA.subVectors(target, this.pos);\n\t\tconst distance = this.pos.angleTo(target);\n\t\tconst targetSpeed = (distance > this.arriveRadius) ? this.maxSpeed : this.maxSpeed * distance / this.arriveRadius;\n\t\tconst targetVelocity = direction.setLength(targetSpeed);\n\n\t\tconst steering = this._vA.subVectors(targetVelocity, this.vel);\n\t\tthis.acc.add(steering.multiplyScalar(intensity));\n\t}\n  \n  wander({ angle = 0.25, radius = 20, intensity = 1 } = {}) {\n\t\tthis.wanderAngle += Math.random() * angle * 2 - angle;\n\n\t\tconst up = this._vA.copy(this.pos).normalize();\n\t\t\n\t\tconst rnd = new THREE.Vector3(Math.cos(this.wanderAngle), Math.sin(this.wanderAngle), 0);\n\t\trnd.multiplyScalar(radius);\n\t\trnd.applyAxisAngle(up, Math.PI / 2);\n\n\t\tconst target = this.pos.clone().add(this.vel).add(rnd);\n\n\t\treturn this.seek(target, { intensity });\n\t}\n}\n\n// MAIN\n// -------------------------------------------\n\nconst behaviors = ['wander', 'seek', 'flee', 'arrive', 'seek-sequence'];\nlet curr = 0;\n\nconst scene = new THREE.Scene();\n\nconst camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.01, 1000);\ncamera.position.z = 300;\n\nconst renderer = new THREE.WebGLRenderer({ alpha: true });\nrenderer.setSize(window.innerWidth, window.innerHeight);\ndocument.body.appendChild( renderer.domElement);\n\nconst radius = 80;\n\nconst geometry = new THREE.SphereGeometry(radius * 0.95, 32, 32);\nconst material = new THREE.MeshStandardMaterial({\n  color: 0xC8C8C8,\n  emissive: 0x072534,\n  roughness: 1,\n  transparent: true,\n  opacity: 0.9,\n});\n\nconst sphere = new THREE.Mesh(geometry, material);\nscene.add(sphere);\n\nconst light = new THREE.PointLight(0xFFFFFF);\nlight.position.set(10, 100, -100);\ncamera.add(light);\nscene.add(camera);\n\nconst controls = new THREE.TrackballControls(camera, renderer.domElement);\n\nconst count = 100;\nboids = [];\n\nfor (let i = 0; i < count; i++) {\n  const color = (!i) ? 0xe5004f : 0xC8C8C8;\n  const pos = getRandomPointOnUnitSphere().setLength(radius);\n  const vel = null;\n  const b = new Boid(radius, color, pos, vel);\n  boids.push(b);\n\tscene.add(b.object3D);\n}\n\nboids[0].maxSpeed *= 1.2;\n\nfunction animate() {\n  requestAnimationFrame(animate);\n  update();\n  draw();\n};\n\nfunction update() {\n  if (controls) controls.update();\n  \n  const b0 = this.boids[0];\n  b0.wander();\n\tb0.update();\n  \n  for (let i = 1; i < boids.length; i++) {\n    const b = boids[i];\n    \n    switch (behaviors[curr]) {\n\t\t\t\tdefault:\n\t\t\t\tcase 'wander': {\n\t\t\t\t\tb.wander();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'seek': {\n\t\t\t\t\tb.seek(b0.pos);\n\t\t\t\t\tb.wander({ intensity: 0.8 });\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'flee': {\n\t\t\t\t\tb.flee(b0.pos);\n\t\t\t\t\tb.wander({ intensity: 0.8 });\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'arrive': {\n\t\t\t\t\tb.arrive(b0.pos);\n\t\t\t\t\tb.wander({ angle: 0.1, intensity: 0.05 });\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'seek-sequence': {\n\t\t\t\t\tb.seek(this.boids[i - 1].pos);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n    \n    b.update();\n  }\n}\n \nfunction draw() {\n  renderer.render(scene, camera);\n};\n\nanimate();\n\n// UI\n// -------------------------------------------\n/*\nconst btn = document.querySelector('button');\nconst lbl = document.querySelector('label');\n\nbtn.addEventListener('click', () => {\n  if (curr < behaviors.length - 1) curr++;\n  else curr = 0;\n  \n  lbl.innerText = behaviors[curr];\n});\n*/\n\nreturn (\n    <div class=\"ui\">\n  <label>wander</label>\n  <button>change behaviour</button>\n</div>\n    \n);\n}\n"]},"metadata":{},"sourceType":"module"}