{"ast":null,"code":"var _jsxFileName = \"/Users/drew/general_assembly/pawpaw/unit_4/week_12/WEB3-Blog/client/src/screens/PostEdit.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostEdit(_ref) {\n  _s();\n\n  let {\n    updatePost,\n    allPosts\n  } = _ref;\n  const [formData, setFormData] = useState({\n    title: \"\",\n    body: \"\"\n  });\n  const {\n    title,\n    body\n  } = formData;\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const prefillFormData = () => {\n      const onePost = allPosts.find(post => {\n        return post.id === Number(id);\n      });\n      const {\n        title,\n        body\n      } = onePost;\n      setFormData({\n        title,\n        body\n      });\n    };\n\n    if (allPosts.length) {\n      prefillFormData();\n    }\n  }, [allPosts, id]);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        updatePost(id, formData);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Update Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: title,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Body:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"body\",\n          value: body,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"good test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n}\n\n_s(PostEdit, \"XFEPk8BtPXMQRry9tbk5fGPg2tY=\", false, function () {\n  return [useParams];\n});\n\n_c = PostEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostEdit\");","map":{"version":3,"sources":["/Users/drew/general_assembly/pawpaw/unit_4/week_12/WEB3-Blog/client/src/screens/PostEdit.jsx"],"names":["React","useState","useEffect","Link","useParams","PostEdit","updatePost","allPosts","formData","setFormData","title","body","id","prefillFormData","onePost","find","post","Number","length","handleChange","e","name","value","target","prevState","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;;AAEA,eAAe,SAASC,QAAT,OAA2C;AAAA;;AAAA,MAAzB;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAyB;AACxD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC;AACvCS,IAAAA,KAAK,EAAE,EADgC;AAEvCC,IAAAA,IAAI,EAAE;AAFiC,GAAD,CAAxC;AAIA,QAAM;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAkBH,QAAxB;AAEA,QAAM;AAAEI,IAAAA;AAAF,MAASR,SAAS,EAAxB;AAGAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,eAAe,GAAG,MAAM;AAC5B,YAAMC,OAAO,GAAGP,QAAQ,CAACQ,IAAT,CAAcC,IAAI,IAAI;AACpC,eAAOA,IAAI,CAACJ,EAAL,KAAYK,MAAM,CAACL,EAAD,CAAzB;AACD,OAFe,CAAhB;AAGA,YAAM;AAAEF,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAkBG,OAAxB;AACAL,MAAAA,WAAW,CAAC;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAD,CAAX;AACD,KAND;;AAOA,QAAIJ,QAAQ,CAACW,MAAb,EAAqB;AACnBL,MAAAA,eAAe;AAChB;AACF,GAXQ,EAWN,CAACN,QAAD,EAAWK,EAAX,CAXM,CAAT;;AAcA,QAAMO,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAd,IAAAA,WAAW,CAACe,SAAS,KAAK,EACxB,GAAGA,SADqB;AAExB,OAACH,IAAD,GAAQC;AAFgB,KAAL,CAAV,CAAX;AAID,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAM,MAAA,QAAQ,EAAGF,CAAD,IAAO;AACrBA,QAAAA,CAAC,CAACK,cAAF;AACAnB,QAAAA,UAAU,CAACM,EAAD,EAAKJ,QAAL,CAAV;AACD,OAHD;AAAA,8BAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA,0CACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,KAAK,EAAEE,KAHT;AAIE,UAAA,QAAQ,EAAES;AAJZ;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAaE;AAAA,yCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,KAAK,EAAER,IAHT;AAIE,UAAA,QAAQ,EAAEQ;AAJZ;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BD;;GA/DuBd,Q;UAOPD,S;;;KAPOC,Q","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nexport default function PostEdit({ updatePost, allPosts}) {\n  const [formData, setFormData] = useState({\n    title: \"\",\n    body: \"\"\n  });\n  const { title, body } = formData;\n\n  const { id } = useParams();\n\n\n  useEffect(() => {\n    const prefillFormData = () => {\n      const onePost = allPosts.find(post => {\n        return post.id === Number(id);\n      })\n      const { title, body } = onePost;\n      setFormData({ title, body });\n    }\n    if (allPosts.length) {\n      prefillFormData()\n    }\n  }, [allPosts, id])\n\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  }\n\n  return (\n      <div className=\"form-container\">\n        <form onSubmit={(e) => {\n          e.preventDefault()\n          updatePost(id, formData);\n        }}>\n          <h3>Update Post</h3>\n          <label>Title:\n            <input\n              type=\"text\"\n              name=\"title\"\n              value={title}\n              onChange={handleChange}\n            />\n          </label>\n          <label>Body:          \n            <input\n              type=\"text\"\n              name=\"body\"\n              value={body}\n              onChange={handleChange}\n            />\n            </label>\n          <button>Submit</button>\n        </form>\n        \n        <h1>good test</h1>\n\n            \n      </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}