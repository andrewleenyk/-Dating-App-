{"ast":null,"code":"var _jsxFileName = \"/Users/drew/general_assembly/pawpaw/unit_4/week_12/WEB3-Blog/client/src/containers/MainContainer/MainContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport { getAllPosts, postPost, putPost, deletePost } from '../../services/posts';\nimport Posts from '../../screens/Posts';\nimport PostDetail from '../../screens/PostDetail';\nimport PostCreate from '../../screens/PostCreate';\nimport PostEdit from '../../screens/PostEdit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MainContainer(_ref) {\n  _s();\n\n  let {\n    currentUser\n  } = _ref;\n  const [allPosts, setAllPosts] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  const fetchPosts = async () => {\n    const posts = await getAllPosts();\n    setAllPosts(posts);\n  }; //sdsaf\n\n\n  const createPost = async postData => {\n    const newPost = await postPost(postData);\n    setAllPosts(prevState => [...prevState, newPost]);\n    history.push('/posts');\n  };\n\n  const updatePost = async (id, postData) => {\n    const updatedPost = await putPost(id, postData);\n    setAllPosts(prevState => prevState.map(post => {\n      return post.id === Number(id) ? updatedPost : post;\n    }));\n    history.push('/posts');\n  };\n\n  const removePost = async id => {\n    await deletePost(id);\n    setAllPosts(prevState => prevState.filter(post => post.id !== id));\n    history.push('/posts');\n  };\n\n  console.log(currentUser.id);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts/new\",\n        children: /*#__PURE__*/_jsxDEV(PostCreate, {\n          createPost: createPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts/:id\",\n        children: /*#__PURE__*/_jsxDEV(PostEdit, {\n          updatePost: updatePost,\n          allPosts: allPosts,\n          removePost: removePost,\n          currentUser: currentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts/:id\",\n        children: /*#__PURE__*/_jsxDEV(PostDetail, {\n          allPosts: allPosts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts\",\n        children: /*#__PURE__*/_jsxDEV(Posts, {\n          allPosts: allPosts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(MainContainer, \"7nuxlWAdXESVv9CtOP4yDOPQ94U=\", false, function () {\n  return [useHistory];\n});\n\n_c = MainContainer;\nexport default MainContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContainer\");","map":{"version":3,"sources":["/Users/drew/general_assembly/pawpaw/unit_4/week_12/WEB3-Blog/client/src/containers/MainContainer/MainContainer.jsx"],"names":["React","useState","useEffect","Route","Switch","useHistory","getAllPosts","postPost","putPost","deletePost","Posts","PostDetail","PostCreate","PostEdit","MainContainer","currentUser","allPosts","setAllPosts","history","fetchPosts","posts","createPost","postData","newPost","prevState","push","updatePost","id","updatedPost","map","post","Number","removePost","filter","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport { getAllPosts, postPost, putPost, deletePost} from '../../services/posts';\nimport Posts from '../../screens/Posts'\nimport PostDetail from '../../screens/PostDetail';\nimport PostCreate from '../../screens/PostCreate';\nimport PostEdit from '../../screens/PostEdit';\n\n\n\nfunction MainContainer({ currentUser }) {\n    const [allPosts, setAllPosts] = useState([]);\n    const history = useHistory();\n\n    useEffect(() => {\n    fetchPosts();\n    }, [])\n\n    const fetchPosts = async () => {\n    const posts = await getAllPosts();\n    setAllPosts(posts);\n    } \n    //sdsaf\n    const createPost = async (postData) => {\n    const newPost = await postPost(postData);\n    setAllPosts(prevState => ([\n        ...prevState,\n        newPost\n    ]));\n    history.push('/posts');\n    }\n    const updatePost = async (id, postData) => {\n    const updatedPost = await putPost(id, postData);\n    setAllPosts(prevState => prevState.map(post => {\n        return post.id === Number(id) ? updatedPost : post\n        })\n    )\n    history.push('/posts');\n    }\n\n    const removePost = async (id) => {\n    await deletePost(id);\n    setAllPosts(prevState => prevState.filter(post => post.id !== id));\n    history.push('/posts');\n    }\n    console.log(currentUser.id)\n    \n\n    return (\n    <>\n        <Switch>\n        <Route path='/posts/new'>\n        <PostCreate\n            createPost={createPost}\n        />\n        </Route>\n        <Route path='/posts/:id'>\n        <PostEdit\n            updatePost={updatePost}\n            allPosts={allPosts}\n            removePost={removePost}\n            currentUser={currentUser}\n        /> \n        </Route>\n        <Route path='/posts/:id'>\n        <PostDetail\n            allPosts={allPosts}\n        />\n        </Route>\n        <Route path='/posts'>\n            <Posts\n            allPosts={allPosts}\n            />\n        </Route>\n        </Switch>\n    </>\n    )\n}\n\nexport default MainContainer;"]},"metadata":{},"sourceType":"module"}