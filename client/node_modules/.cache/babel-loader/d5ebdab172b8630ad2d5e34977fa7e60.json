{"ast":null,"code":"var _jsxFileName = \"/Users/drew/general_assembly/pawpaw/unit_4/week_12/WEB3-Blog/client/src/components/threejs/three.js\";\nimport React, { Component } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Scene extends Component {\n  constructor(props) {\n    super(props);\n    this.start = this.start.bind(this);\n    this.stop = this.stop.bind(this);\n    this.animate = this.animate.bind(this);\n  }\n\n  componentDidMount() {\n    const width = this.mount.clientWidth;\n    const height = this.mount.clientHeight;\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    const geometry = new THREE.BoxGeometry(1, 1, 1);\n    const material = new THREE.MeshBasicMaterial({\n      color: '#433F81'\n    });\n    const cube = new THREE.Mesh(geometry, material);\n    camera.position.z = 4;\n    scene.add(cube);\n    renderer.setClearColor('#000000');\n    renderer.setSize(width, height);\n    this.scene = scene;\n    this.camera = camera;\n    this.renderer = renderer;\n    this.material = material;\n    this.cube = cube;\n    this.mount.appendChild(this.renderer.domElement);\n    this.start();\n  }\n\n  componentWillUnmount() {\n    this.stop();\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\n  start() {\n    if (!this.frameId) {\n      this.frameId = requestAnimationFrame(this.animate);\n    }\n  }\n\n  stop() {\n    cancelAnimationFrame(this.frameId);\n  }\n\n  animate() {\n    this.cube.rotation.x += 0.01;\n    this.cube.rotation.y += 0.01;\n    this.renderScene();\n    this.frameId = window.requestAnimationFrame(this.animate);\n  }\n\n  renderScene() {\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '400px',\n        height: '400px'\n      },\n      ref: mount => {\n        this.mount = mount;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Scene;","map":{"version":3,"sources":["/Users/drew/general_assembly/pawpaw/unit_4/week_12/WEB3-Blog/client/src/components/threejs/three.js"],"names":["React","Component","THREE","Scene","constructor","props","start","bind","stop","animate","componentDidMount","width","mount","clientWidth","height","clientHeight","scene","camera","PerspectiveCamera","renderer","WebGLRenderer","antialias","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","position","z","add","setClearColor","setSize","appendChild","domElement","componentWillUnmount","removeChild","frameId","requestAnimationFrame","cancelAnimationFrame","rotation","x","y","renderScene","window","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport * as THREE from 'three'\n\nclass Scene extends Component {\n  constructor(props) {\n    super(props)\n\n    this.start = this.start.bind(this)\n    this.stop = this.stop.bind(this)\n    this.animate = this.animate.bind(this)\n  }\n\n  componentDidMount() {\n    const width = this.mount.clientWidth\n    const height = this.mount.clientHeight\n\n    const scene = new THREE.Scene()\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      width / height,\n      0.1,\n      1000\n    )\n    const renderer = new THREE.WebGLRenderer({ antialias: true })\n    const geometry = new THREE.BoxGeometry(1, 1, 1)\n    const material = new THREE.MeshBasicMaterial({ color: '#433F81' })\n    const cube = new THREE.Mesh(geometry, material)\n\n    camera.position.z = 4\n    scene.add(cube)\n    renderer.setClearColor('#000000')\n    renderer.setSize(width, height)\n\n    this.scene = scene\n    this.camera = camera\n    this.renderer = renderer\n    this.material = material\n    this.cube = cube\n\n    this.mount.appendChild(this.renderer.domElement)\n    this.start()\n  }\n\n  componentWillUnmount() {\n    this.stop()\n    this.mount.removeChild(this.renderer.domElement)\n  }\n\n  start() {\n    if (!this.frameId) {\n      this.frameId = requestAnimationFrame(this.animate)\n    }\n  }\n\n  stop() {\n    cancelAnimationFrame(this.frameId)\n  }\n\n  animate() {\n    this.cube.rotation.x += 0.01\n    this.cube.rotation.y += 0.01\n\n    this.renderScene()\n    this.frameId = window.requestAnimationFrame(this.animate)\n  }\n\n  renderScene() {\n    this.renderer.render(this.scene, this.camera)\n  }\n\n  render() {\n    return (\n      <div\n        style={{ width: '400px', height: '400px' }}\n        ref={(mount) => { this.mount = mount }}\n      />\n    )\n  }\n}\n\nexport default Scene"]},"metadata":{},"sourceType":"module"}