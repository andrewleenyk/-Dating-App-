{"ast":null,"code":"var _jsxFileName = \"/Users/drew/general_assembly/pawpaw/unit_4/week_12/WEB3-Blog/client/src/components/Sphere/Sphere.js\",\n    _s = $RefreshSig$();\n\nimport './Sphere.css';\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport TweenLite from 'gsap';\nimport launchApp from 'launch-app';\nimport * as dat from 'dat.gui';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sphere() {\n  _s();\n\n  useEffect(() => {\n    // Three JS\n    window.addEventListener('load', init, false);\n\n    function init() {\n      createWorld();\n      createPrimitive();\n      createGUI(); //---\n\n      animation();\n    }\n\n    var Theme = {\n      _darkred: 0x000000\n    }; //--------------------------------------------------------------------\n\n    var scene, camera, renderer, container;\n    var start = Date.now();\n\n    var _width, _height;\n\n    function createWorld() {\n      _width = window.innerWidth;\n      _height = window.innerHeight; //---\n\n      scene = new THREE.Scene(); //scene.fog = new THREE.Fog(Theme._darkred, 8, 20);\n\n      scene.background = new THREE.Color(Theme._darkred); //---\n\n      camera = new THREE.PerspectiveCamera(55, _width / _height, 1, 1000);\n      camera.position.z = 12; //---\n\n      renderer = new THREE.WebGLRenderer({\n        antialias: true,\n        alpha: false\n      });\n      renderer.setSize(_width, _height); //---\n\n      container = document.getElementById(\"container\");\n      container.appendChild(renderer.domElement); //---\n\n      window.addEventListener('resize', onWindowResize, false);\n    }\n\n    function onWindowResize() {\n      _width = window.innerWidth;\n      _height = window.innerHeight;\n      renderer.setSize(_width, _height);\n      camera.aspect = _width / _height;\n      camera.updateProjectionMatrix();\n      console.log('- resize -');\n    } //--------------------------------------------------------------------\n\n\n    var mat;\n\n    var primitiveElement = function () {\n      this.mesh = new THREE.Object3D();\n      mat = new THREE.ShaderMaterial({\n        wireframe: false,\n        //fog: true,\n        uniforms: {\n          time: {\n            type: \"f\",\n            value: 0.0\n          },\n          pointscale: {\n            type: \"f\",\n            value: 0.0\n          },\n          decay: {\n            type: \"f\",\n            value: 0.0\n          },\n          complex: {\n            type: \"f\",\n            value: 0.0\n          },\n          waves: {\n            type: \"f\",\n            value: 0.0\n          },\n          eqcolor: {\n            type: \"f\",\n            value: 0.0\n          },\n          fragment: {\n            type: \"i\",\n            value: true\n          },\n          redhell: {\n            type: \"i\",\n            value: true\n          }\n        },\n        vertexShader: document.getElementById('vertexShader').textContent,\n        fragmentShader: document.getElementById('fragmentShader').textContent\n      });\n      var geo = new THREE.IcosahedronBufferGeometry(3, 7);\n      var mesh = new THREE.Points(geo, mat); //---\n\n      this.mesh.add(mesh);\n    };\n\n    var _primitive;\n\n    function createPrimitive() {\n      _primitive = new primitiveElement();\n      scene.add(_primitive.mesh);\n    } //--------------------------------------------------------------------\n\n\n    var options = {\n      perlin: {\n        vel: 0.002,\n        speed: 0.00050,\n        perlins: 1.0,\n        decay: 0.10,\n        complex: 0.30,\n        waves: 20.0,\n        eqcolor: 11.0,\n        fragment: true,\n        redhell: true\n      },\n      spin: {\n        sinVel: 0.0,\n        ampVel: 80.0\n      }\n    };\n\n    function createGUI() {\n      var gui = new dat.GUI();\n      var camGUI = gui.addFolder('Camera'); //cam.add(, 'speed', 0.0, 30.00).listen();\n\n      camGUI.add(camera.position, 'z', 3, 20).name('Zoom').listen();\n      camGUI.add(options.perlin, 'vel', 0.000, 0.02).name('Velocity').listen(); //camGUI.open();\n\n      var mathGUI = gui.addFolder('Math Options');\n      mathGUI.add(options.spin, 'sinVel', 0.0, 0.50).name('Sine').listen();\n      mathGUI.add(options.spin, 'ampVel', 0.0, 90.00).name('Amplitude').listen(); //mathGUI.open();\n\n      var perlinGUI = gui.addFolder('Setup Perlin Noise');\n      perlinGUI.add(options.perlin, 'perlins', 1.0, 5.0).name('Size').step(1);\n      perlinGUI.add(options.perlin, 'speed', 0.00000, 0.00050).name('Speed').listen();\n      perlinGUI.add(options.perlin, 'decay', 0.0, 1.00).name('Decay').listen();\n      perlinGUI.add(options.perlin, 'waves', 0.0, 20.00).name('Waves').listen();\n      perlinGUI.add(options.perlin, 'fragment', true).name('Fragment');\n      perlinGUI.add(options.perlin, 'complex', 0.1, 1.00).name('Complex').listen();\n      perlinGUI.add(options.perlin, 'redhell', true).name('Electroflow');\n      perlinGUI.add(options.perlin, 'eqcolor', 0.0, 15.0).name('Hue').listen();\n      perlinGUI.open();\n    } //--------------------------------------------------------------------\n\n\n    function animation() {\n      requestAnimationFrame(animation);\n      var performance = Date.now() * 0.003;\n      _primitive.mesh.rotation.y += options.perlin.vel;\n      _primitive.mesh.rotation.x = Math.sin(performance * options.spin.sinVel) * options.spin.ampVel * Math.PI / 180; //---\n\n      mat.uniforms['time'].value = options.perlin.speed * (Date.now() - start);\n      mat.uniforms['pointscale'].value = options.perlin.perlins;\n      mat.uniforms['decay'].value = options.perlin.decay;\n      mat.uniforms['complex'].value = options.perlin.complex;\n      mat.uniforms['waves'].value = options.perlin.waves;\n      mat.uniforms['eqcolor'].value = options.perlin.eqcolor;\n      mat.uniforms['fragment'].value = options.perlin.fragment;\n      mat.uniforms['redhell'].value = options.perlin.redhell; //---\n\n      camera.lookAt(scene.position);\n      renderer.render(scene, camera);\n    }\n\n    return () => {};\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Sphere, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Sphere;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sphere\");","map":{"version":3,"sources":["/Users/drew/general_assembly/pawpaw/unit_4/week_12/WEB3-Blog/client/src/components/Sphere/Sphere.js"],"names":["ReactDOM","THREE","TweenLite","launchApp","dat","Sphere","useEffect","window","addEventListener","init","createWorld","createPrimitive","createGUI","animation","Theme","_darkred","scene","camera","renderer","container","start","Date","now","_width","_height","innerWidth","innerHeight","Scene","background","Color","PerspectiveCamera","position","z","WebGLRenderer","antialias","alpha","setSize","document","getElementById","appendChild","domElement","onWindowResize","aspect","updateProjectionMatrix","console","log","mat","primitiveElement","mesh","Object3D","ShaderMaterial","wireframe","uniforms","time","type","value","pointscale","decay","complex","waves","eqcolor","fragment","redhell","vertexShader","textContent","fragmentShader","geo","IcosahedronBufferGeometry","Points","add","_primitive","options","perlin","vel","speed","perlins","spin","sinVel","ampVel","gui","GUI","camGUI","addFolder","name","listen","mathGUI","perlinGUI","step","open","requestAnimationFrame","performance","rotation","y","x","Math","sin","PI","lookAt","render"],"mappings":"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","sourcesContent":["import './Sphere.css';\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport TweenLite  from 'gsap';\nimport launchApp from 'launch-app'\nimport * as dat from 'dat.gui';\n\n\nexport default function Sphere() {\n\nuseEffect(() => {\n    // Three JS\n\nwindow.addEventListener('load', init, false);\n\nfunction init() {\n  createWorld();\n  createPrimitive();\n  createGUI();\n  //---\n  animation();\n}\n\nvar Theme = {_darkred: 0x000000}\n\n//--------------------------------------------------------------------\n\nvar scene, camera, renderer, container;\nvar start = Date.now();\nvar _width, _height;\nfunction createWorld() {\n  _width = window.innerWidth;\n  _height= window.innerHeight;\n  //---\n  scene = new THREE.Scene();\n  //scene.fog = new THREE.Fog(Theme._darkred, 8, 20);\n  scene.background = new THREE.Color(Theme._darkred);\n  //---\n  camera = new THREE.PerspectiveCamera(55, _width/_height, 1, 1000);\n  camera.position.z = 12;\n  //---\n  renderer = new THREE.WebGLRenderer({antialias:true, alpha:false});\n  renderer.setSize(_width, _height);\n  //---\n  container = document.getElementById(\"container\");\n  container.appendChild(renderer.domElement);\n  //---\n  window.addEventListener('resize', onWindowResize, false);\n}\n\nfunction onWindowResize() {\n  _width = window.innerWidth;\n  _height = window.innerHeight;\n  renderer.setSize(_width, _height);\n  camera.aspect = _width / _height;\n  camera.updateProjectionMatrix();\n  console.log('- resize -');\n}\n\n//--------------------------------------------------------------------\n\nvar mat;\nvar primitiveElement = function() {\n  this.mesh = new THREE.Object3D();\n  mat = new THREE.ShaderMaterial( {\n    wireframe: false,\n    //fog: true,\n    uniforms: {\n      time: {\n        type: \"f\",\n        value: 0.0\n      },\n      pointscale: {\n        type: \"f\",\n        value: 0.0\n      },\n      decay: {\n        type: \"f\",\n        value: 0.0\n      },\n      complex: {\n        type: \"f\",\n        value: 0.0\n      },\n      waves: {\n        type: \"f\",\n        value: 0.0\n      },\n      eqcolor: {\n        type: \"f\",\n        value: 0.0\n      },\n      fragment: {\n        type: \"i\",\n        value: true\n      },\n      redhell: {\n        type: \"i\",\n        value: true\n      }\n    },\n    vertexShader: document.getElementById( 'vertexShader' ).textContent,\n    fragmentShader: document.getElementById( 'fragmentShader' ).textContent\n  });\n  var geo = new THREE.IcosahedronBufferGeometry(3, 7);\n  var mesh = new THREE.Points(geo, mat);\n  \n  //---\n  this.mesh.add(mesh);\n}\n\nvar _primitive;\nfunction createPrimitive() {\n  _primitive = new primitiveElement();\n  scene.add(_primitive.mesh);\n}\n\n//--------------------------------------------------------------------\n\nvar options = {\n  perlin: {\n    vel: 0.002,\n    speed: 0.00050,\n    perlins: 1.0,\n    decay: 0.10,\n    complex: 0.30,\n    waves: 20.0,\n    eqcolor: 11.0,\n    fragment: true,\n    redhell: true\n  },\n  spin: {\n    sinVel: 0.0,\n    ampVel: 80.0,\n  }\n}\n\nfunction createGUI() {\n  var gui = new dat.GUI();\n  var camGUI = gui.addFolder('Camera');\n  //cam.add(, 'speed', 0.0, 30.00).listen();\n  camGUI.add(camera.position, 'z', 3, 20).name('Zoom').listen();\n  camGUI.add(options.perlin, 'vel', 0.000, 0.02).name('Velocity').listen();\n  //camGUI.open();\n  \n  var mathGUI = gui.addFolder('Math Options');\n  mathGUI.add(options.spin, 'sinVel', 0.0, 0.50).name('Sine').listen();\n  mathGUI.add(options.spin, 'ampVel', 0.0, 90.00).name('Amplitude').listen();\n  //mathGUI.open();\n  \n  var perlinGUI = gui.addFolder('Setup Perlin Noise');\n  perlinGUI.add(options.perlin, 'perlins', 1.0, 5.0).name('Size').step(1);\n  perlinGUI.add(options.perlin, 'speed', 0.00000, 0.00050).name('Speed').listen();\n  perlinGUI.add(options.perlin, 'decay', 0.0, 1.00).name('Decay').listen();\n  perlinGUI.add(options.perlin, 'waves', 0.0, 20.00).name('Waves').listen();\n  perlinGUI.add(options.perlin, 'fragment', true).name('Fragment');\n  perlinGUI.add(options.perlin, 'complex', 0.1, 1.00).name('Complex').listen();\n  perlinGUI.add(options.perlin, 'redhell', true).name('Electroflow');\n  perlinGUI.add(options.perlin, 'eqcolor', 0.0, 15.0).name('Hue').listen();\n  perlinGUI.open();\n}\n\n//--------------------------------------------------------------------\n\nfunction animation() {\n  requestAnimationFrame(animation);\n  var performance = Date.now() * 0.003;\n  \n  _primitive.mesh.rotation.y += options.perlin.vel;\n  _primitive.mesh.rotation.x = (Math.sin(performance * options.spin.sinVel) * options.spin.ampVel )* Math.PI / 180;\n  //---\n  mat.uniforms['time'].value = options.perlin.speed * (Date.now() - start);\n  mat.uniforms['pointscale'].value = options.perlin.perlins;\n  mat.uniforms['decay'].value = options.perlin.decay;\n  mat.uniforms['complex'].value = options.perlin.complex;\n  mat.uniforms['waves'].value = options.perlin.waves;\n  mat.uniforms['eqcolor'].value = options.perlin.eqcolor;\n  mat.uniforms['fragment'].value = options.perlin.fragment;\n  mat.uniforms['redhell'].value = options.perlin.redhell;\n  //---\n  camera.lookAt(scene.position);\n  renderer.render(scene, camera);\n}\n    return () => {\n        \n    }\n}, [])\n\n\nreturn (\n    \n    <div id=\"container\">\n        \n    </div>\n    \n);\n}\n"]},"metadata":{},"sourceType":"module"}