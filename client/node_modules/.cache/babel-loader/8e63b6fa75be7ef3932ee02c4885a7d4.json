{"ast":null,"code":"var _jsxFileName = \"/Users/drew/general_assembly/pawpaw/unit_4/week_12/WEB3-Blog/client/src/screens/PostEdit.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Layout from '../Layouts/Layout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostEdit(props) {\n  _s();\n\n  const [formData, setFormData] = useState({\n    title: \"\",\n    body: \"\"\n  });\n  const {\n    title,\n    body\n  } = formData;\n  const {\n    updatePost,\n    allPosts\n  } = props;\n  const {\n    id\n  } = useParams();\n  console.log(updatePost);\n  console.log(allPosts);\n  useEffect(() => {\n    const prefillFormData = () => {\n      const onePost = allPosts.find(post => {\n        return post.id === Number(id);\n      });\n      const {\n        title,\n        body\n      } = onePost;\n      setFormData({\n        title,\n        body\n      });\n    };\n\n    if (allPosts.length) {\n      prefillFormData();\n    }\n  }, [allPosts, id]);\n\n  const handleChange = e => {\n    const {\n      title,\n      value\n    } = e.target;\n    setFormData(prevState => ({ ...prevState,\n      [title]: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          updatePost(id, formData);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Update Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            defaultValue: title,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Body:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"body\",\n            defaultValue: body,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostEdit, \"XFEPk8BtPXMQRry9tbk5fGPg2tY=\", false, function () {\n  return [useParams];\n});\n\n_c = PostEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostEdit\");","map":{"version":3,"sources":["/Users/drew/general_assembly/pawpaw/unit_4/week_12/WEB3-Blog/client/src/screens/PostEdit.jsx"],"names":["React","useState","useEffect","useParams","Layout","PostEdit","props","formData","setFormData","title","body","updatePost","allPosts","id","console","log","prefillFormData","onePost","find","post","Number","length","handleChange","e","value","target","prevState","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACtC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC;AACvCQ,IAAAA,KAAK,EAAE,EADgC;AAEvCC,IAAAA,IAAI,EAAE;AAFiC,GAAD,CAAxC;AAIA,QAAM;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAkBH,QAAxB;AACA,QAAM;AAAEI,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA2BN,KAAjC;AACA,QAAM;AAAEO,IAAAA;AAAF,MAASV,SAAS,EAAxB;AACFW,EAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACEV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,eAAe,GAAG,MAAM;AAC5B,YAAMC,OAAO,GAAGL,QAAQ,CAACM,IAAT,CAAcC,IAAI,IAAI;AACpC,eAAOA,IAAI,CAACN,EAAL,KAAYO,MAAM,CAACP,EAAD,CAAzB;AACD,OAFe,CAAhB;AAGA,YAAM;AAAEJ,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAkBO,OAAxB;AACAT,MAAAA,WAAW,CAAC;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAD,CAAX;AACD,KAND;;AAOA,QAAIE,QAAQ,CAACS,MAAb,EAAqB;AACnBL,MAAAA,eAAe;AAChB;AACF,GAXQ,EAWN,CAACJ,QAAD,EAAWC,EAAX,CAXM,CAAT;;AAcA,QAAMS,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEd,MAAAA,KAAF;AAASe,MAAAA;AAAT,QAAmBD,CAAC,CAACE,MAA3B;AACAjB,IAAAA,WAAW,CAACkB,SAAS,KAAK,EACxB,GAAGA,SADqB;AAExB,OAACjB,KAAD,GAASe;AAFe,KAAL,CAAV,CAAX;AAID,GAND;;AAQA,sBACE,QAAC,MAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAGD,CAAD,IAAO;AACrBA,UAAAA,CAAC,CAACI,cAAF;AACAhB,UAAAA,UAAU,CAACE,EAAD,EAAKN,QAAL,CAAV;AACD,SAHD;AAAA,gCAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA,4CACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,YAAY,EAAEE,KAHhB;AAIE,YAAA,QAAQ,EAAEa;AAJZ;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAaE;AAAA,2CACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,YAAY,EAAEZ,IAHhB;AAIE,YAAA,QAAQ,EAAEY;AAJZ;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,eAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GA7DuBjB,Q;UAOPF,S;;;KAPOE,Q","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Layout from '../Layouts/Layout';\n\nexport default function PostEdit(props) {\n  const [formData, setFormData] = useState({\n    title: \"\",\n    body: \"\"\n  });\n  const { title, body } = formData;\n  const { updatePost, allPosts } = props;\n  const { id } = useParams();\nconsole.log(updatePost)\nconsole.log(allPosts)\n  useEffect(() => {\n    const prefillFormData = () => {\n      const onePost = allPosts.find(post => {\n        return post.id === Number(id);\n      })\n      const { title, body } = onePost;\n      setFormData({ title, body });\n    }\n    if (allPosts.length) {\n      prefillFormData()\n    }\n  }, [allPosts, id])\n\n\n  const handleChange = (e) => {\n    const { title, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [title]: value,\n    }));\n  }\n\n  return (\n    <Layout>\n      <div className=\"form-container\">\n        <form onSubmit={(e) => {\n          e.preventDefault()\n          updatePost(id, formData);\n        }}>\n          <h3>Update Post</h3>\n          <label>Title:\n            <input\n              type=\"text\"\n              name=\"title\"\n              defaultValue={title}\n              onChange={handleChange}\n            />\n          </label>\n          <label>Body:          \n            <input\n              type=\"text\"\n              name=\"body\"\n              defaultValue={body}\n              onChange={handleChange}\n            />\n            </label>\n          <button>Submit</button>\n        </form>\n      </div>\n    </Layout>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}